// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOFType-0]
	_ = x[IntegerType-1]
	_ = x[BooleanType-2]
	_ = x[OpenParenType-3]
	_ = x[CloseParenType-4]
	_ = x[OpenBraceType-5]
	_ = x[CloseBraceType-6]
	_ = x[VarDeclType-7]
	_ = x[IntDeclType-8]
	_ = x[BoolDeclType-9]
	_ = x[SemicolonType-10]
	_ = x[IdentifierType-11]
	_ = x[OperatorType-12]
	_ = x[FnDefType-13]
}

const _TokenType_name = "EOFTypeIntegerTypeBooleanTypeOpenParenTypeCloseParenTypeOpenBraceTypeCloseBraceTypeVarDeclTypeIntDeclTypeBoolDeclTypeSemicolonTypeIdentifierTypeOperatorTypeFnDefType"

var _TokenType_index = [...]uint8{0, 7, 18, 29, 42, 56, 69, 83, 94, 105, 117, 130, 144, 156, 165}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
