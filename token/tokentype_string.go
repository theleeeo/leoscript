// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOFType-0]
	_ = x[IntegerType-1]
	_ = x[OperatorType-2]
	_ = x[OpenParenType-3]
	_ = x[CloseParenType-4]
	_ = x[SemicolonType-5]
	_ = x[IdentifierType-6]
	_ = x[BooleanType-7]
	_ = x[VarDeclType-8]
	_ = x[IntDeclType-9]
	_ = x[BoolDeclType-10]
}

const _TokenType_name = "EOFTypeIntegerTypeOperatorTypeOpenParenTypeCloseParenTypeSemicolonTypeIdentifierTypeBooleanTypeVarDeclTypeIntDeclTypeBoolDeclType"

var _TokenType_index = [...]uint8{0, 7, 18, 30, 43, 57, 70, 84, 95, 106, 117, 129}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
